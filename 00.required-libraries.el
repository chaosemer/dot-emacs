;; A better defmacro.
(defmacro defmacro+ (name args &rest body)
  "Like `defmacro*', but also attempts to figure out the indenting"
  (let ((body-index (position-if (lambda (arg) (member arg '(&body &rest)))
                                 (remove '&optional args))))
    `(progn
       (setf (get ',name 'lisp-indent-function) ,body-index)
       (defmacro* ,name ,args ,@body))))

;; A more useable user-level way to add hooks.
(defvar hook-minor-mode-*hooks* (make-hash-table :test #'eq))
(defun hook-minor-mode-attach (hook function)
  (when (gethash hook hook-minor-mode-*hooks*)
    (remove-hook hook (gethash hook hook-minor-mode-*hooks*)))
  (add-hook hook function)
  (setf (gethash hook hook-minor-mode-*hooks*) function))

(defmacro+ hook-minor-mode (hook &body modes)
  "Hook each minor mode MODE on HOOK."
  (let ((body (loop for expr in modes
                    if (and (symbolp expr) (fboundp expr))
                      collect (list expr 1)
                    else if (listp expr)
                      collect expr
                    else do (error "~A does not appear to name a minor mode."))))
    `(hook-minor-mode-attach ',hook (lambda () "Auto-generated by `hook-minor-mode'"
                                      ,@body))))

;; Convenient shorthand for requiring without an error.
(defun require-noerror (feature &optional filename)
  (require feature filename t))

;; Patches for buggy/old emacs code:
(unless (fboundp 'cua-mode)
  (require 'cua)
  (message "Using old compatibility mode for CUA-MODE")
  (defalias 'cua-mode 'CUA-mode))
(unless (fboundp 'grep-tree)
  (message "Using old compatibility mode for GREP-TREE")
  (defalias 'grep-tree 'grep-find))
(unless (fboundp 'semantic-default-elisp-setup)
  (message "Using non-existant function SEMANTIC-DEFAULT-ELISP-SETUP")
  (defun semantic-default-elisp-setup ()))

(defsetf lookup-key define-key)

(defun bar-cursor-set-cursor (&optional frame)
  "Replacement for buggy `bar-cursor-set-cursor' in 'bar-cursor'."
  (message "Using replacement `bar-cursor-set-cursor'.")
  (if (and bar-cursor-mode (not overwrite-mode))
      (bar-cursor-set-cursor-type 'bar frame)
    (bar-cursor-set-cursor-type 'box frame)))
